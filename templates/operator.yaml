{{- if .Values.operator.createOperator }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rook-ceph-operator
  namespace: {{ .Values.operator.namespace }}
  labels:
    operator: rook
    storage-backend: ceph
    {{- include "rook-ceph-cluster.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rook-ceph-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rook-ceph-operator
        {{- include "rook-ceph-cluster.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: rook-ceph-system
      containers:
      - name: rook-ceph-operator
        image: {{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag }}
        imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
        args: ["ceph", "operator"]
        securityContext:
          runAsNonRoot: true
          runAsUser: 2016
          runAsGroup: 2016
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - mountPath: /var/lib/rook
          name: rook-config
        - mountPath: /etc/ceph
          name: default-config-dir
        - mountPath: /etc/webhook
          name: webhook-cert
          readOnly: true
        ports:
        - containerPort: 9443
          name: https-webhook
          protocol: TCP
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        env:
        - name: ROOK_CURRENT_NAMESPACE_ONLY
          value: "false"
        - name: ROOK_ALLOW_MULTIPLE_FILESYSTEMS
          value: "false"
        - name: ROOK_LOG_LEVEL
          value: "INFO"
        - name: ROOK_CEPH_STATUS_CHECK_INTERVAL
          value: "60s"
        - name: ROOK_MON_HEALTHCHECK_INTERVAL
          value: "45s"
        - name: ROOK_MON_OUT_TIMEOUT
          value: "600s"
        - name: ROOK_DISCOVER_DEVICES_INTERVAL
          value: "60m"
        - name: ROOK_HOSTPATH_REQUIRES_PRIVILEGED
          value: "true"
        - name: ROOK_ENABLE_SELINUX_RELABELING
          value: "true"
        - name: ROOK_ENABLE_FSGROUP
          value: "true"
        - name: ROOK_DISABLE_DEVICE_HOTPLUG
          value: "true"
        - name: ROOK_ENABLE_DISCOVERY_DAEMON
          value: {{ .Values.operator.enableDiscoveryDaemon | quote }}
        - name: CSI_ENABLE_OMAP_GENERATOR
          value: "false"
        - name: CSI_ENABLE_HOST_NETWORK
          value: "true"
        - name: CSI_DISABLE_HOLDER_PODS
          value: "true"
        - name: ROOK_CSI_DISABLE_DRIVER
          value: "false"
        - name: ROOK_CSI_ALLOW_UNSUPPORTED_VERSION
          value: "false"
        - name: ROOK_CSI_ENABLE_RBD
          value: {{ .Values.operator.csi.enableRBD | quote }}
        - name: ROOK_CSI_ENABLE_CEPHFS
          value: {{ .Values.operator.csi.enableCephFS | quote }}
        - name: ROOK_CSI_ENABLE_GRPC_METRICS
          value: "true"
        - name: ROOK_CSI_FORCE_CEPHFS_KERNEL_CLIENT
          value: "false"
        - name: ROOK_CSI_RBD_FSTYPE
          value: "ext4"
        - name: ROOK_CSI_LOG_LEVEL
          value: {{ .Values.operator.csi.logLevel | quote }}
        {{- range $key, $value := .Values.operator.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- if .Values.operator.resources }}
        resources:
          {{- toYaml .Values.operator.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.operator.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.operator.livenessProbe | nindent 10 }}
        {{- else }}
        livenessProbe:
          exec:
            command:
            - stat
            - /tmp/operator-ready
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        {{- end }}
        {{- if .Values.operator.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.operator.readinessProbe | nindent 10 }}
        {{- else }}
        readinessProbe:
          exec:
            command:
            - stat
            - /tmp/operator-ready
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- end }}
      volumes:
      - name: rook-config
        emptyDir: {}
      - name: default-config-dir
        emptyDir: {}
      - name: webhook-cert
        emptyDir: {}
      {{- if .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.operator.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.operator.tolerations }}
      tolerations:
        {{- toYaml .Values.operator.tolerations | nindent 6 }}
      {{- end }}
      {{- if .Values.operator.affinity }}
      affinity:
        {{- toYaml .Values.operator.affinity | nindent 8 }}
      {{- end }}
{{- end }}
