{{- if .Values.operator.csi.enableRBD }}
# CSI RBD Plugin DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-rbdplugin
  namespace: {{ .Values.operator.namespace }}
  labels:
    app: csi-rbdplugin
    {{- include "rook-ceph-cluster.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: csi-rbdplugin
  template:
    metadata:
      labels:
        app: csi-rbdplugin
        {{- include "rook-ceph-cluster.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: rook-csi-rbd-plugin-sa
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: driver-registrar
        # This is necessary only for systems with SELinux, where
        # non-privileged sidecar containers cannot access unix domain socket
        # created by privileged CSI driver container.
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        image: {{ .Values.operator.env.ROOK_CSI_REGISTRAR_IMAGE | default "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.11.1" }}
        args:
        - "--v={{ .Values.operator.csi.logLevel | default 0 }}"
        - "--csi-address=/csi/csi.sock"
        - "--kubelet-registration-path={{ .Values.operator.env.ROOK_CSI_KUBELET_DIR_PATH }}/plugins/rook-ceph.rbd.csi.ceph.com/csi.sock"
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration
      - name: csi-rbdplugin
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        image: {{ .Values.operator.env.ROOK_CSI_CEPH_IMAGE | default "quay.io/cephcsi/cephcsi:v3.12.2" }}
        args:
        - "--nodeid=$(NODE_ID)"
        - "--type=rbd"
        - "--controllerserver=false"
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--instanceid=$(INSTANCE_ID)"
        - "--pidlimit=-1"
        - "--logtostderr=true"
        - "--v={{ .Values.operator.csi.logLevel | default 0 }}"
        - "--drivername=rook-ceph.rbd.csi.ceph.com"
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: pods-mount-dir
          mountPath: {{ .Values.operator.env.ROOK_CSI_KUBELET_DIR_PATH }}/pods
          mountPropagation: Bidirectional
        - name: plugin-mount-dir
          mountPath: {{ .Values.operator.env.ROOK_CSI_KUBELET_DIR_PATH }}/plugins
          mountPropagation: Bidirectional
        - mountPath: /dev
          name: host-dev
        - mountPath: /sys
          name: host-sys
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - name: ceph-csi-config
          mountPath: /etc/csi-config/
        - name: ceph-csi-encryption-kms-config
          mountPath: /etc/csi-encryption-kms-config/
        - name: plugin-mount-dir
          mountPath: {{ .Values.operator.env.ROOK_CSI_KUBELET_DIR_PATH }}/plugins/kubernetes.io/csi
          mountPropagation: Bidirectional
        - name: ceph-config
          mountPath: /etc/ceph/
        - name: ceph-csi-config
          mountPath: /etc/csi-config/
        - name: keys-tmp-dir
          mountPath: /tmp/csi/keys
      volumes:
      - name: plugin-dir
        hostPath:
          path: {{ .Values.operator.env.ROOK_CSI_KUBELET_DIR_PATH }}/plugins/rook-ceph.rbd.csi.ceph.com
          type: DirectoryOrCreate
      - name: plugin-mount-dir
        hostPath:
          path: {{ .Values.operator.env.ROOK_CSI_KUBELET_DIR_PATH }}/plugins
          type: Directory
      - name: registration-dir
        hostPath:
          path: {{ .Values.operator.env.ROOK_CSI_KUBELET_DIR_PATH }}/plugins_registry
          type: Directory
      - name: pods-mount-dir
        hostPath:
          path: {{ .Values.operator.env.ROOK_CSI_KUBELET_DIR_PATH }}/pods
          type: Directory
      - name: host-dev
        hostPath:
          path: /dev
      - name: host-sys
        hostPath:
          path: /sys
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: ceph-config
        emptyDir: {}
      - name: ceph-csi-config
        configMap:
          name: rook-ceph-csi-config
      - name: ceph-csi-encryption-kms-config
        configMap:
          name: rook-ceph-csi-encryption-kms-config
      - name: keys-tmp-dir
        emptyDir:
          medium: Memory
      {{- if .Values.operator.csi.pluginTolerations }}
      tolerations:
        {{- toYaml .Values.operator.csi.pluginTolerations | nindent 6 }}
      {{- end }}
---
# CSI RBD Provisioner Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-rbdplugin-provisioner
  namespace: {{ .Values.operator.namespace }}
  labels:
    app: csi-rbdplugin-provisioner
    {{- include "rook-ceph-cluster.labels" . | nindent 4 }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: csi-rbdplugin-provisioner
  template:
    metadata:
      labels:
        app: csi-rbdplugin-provisioner
        {{- include "rook-ceph-cluster.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: rook-csi-rbd-provisioner-sa
      containers:
      - name: csi-provisioner
        image: {{ .Values.operator.env.ROOK_CSI_PROVISIONER_IMAGE | default "registry.k8s.io/sig-storage/csi-provisioner:v5.0.1" }}
        args:
        - "--csi-address=$(ADDRESS)"
        - "--v={{ .Values.operator.csi.logLevel | default 0 }}"
        - "--timeout=150s"
        - "--retry-interval-start=500ms"
        - "--enable-leader-election=true"
        - "--leader-election-type=leases"
        - "--feature-gates=Topology=true"
        - "--extra-create-metadata=true"
        env:
        - name: ADDRESS
          value: unix:///csi/csi-provisioner.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      - name: csi-resizer
        image: {{ .Values.operator.env.ROOK_CSI_RESIZER_IMAGE | default "registry.k8s.io/sig-storage/csi-resizer:v1.11.1" }}
        args:
        - "--csi-address=$(ADDRESS)"
        - "--v={{ .Values.operator.csi.logLevel | default 0 }}"
        - "--timeout=150s"
        - "--leader-election"
        - "--retry-interval-start=500ms"
        - "--handle-volume-inuse-error=false"
        env:
        - name: ADDRESS
          value: unix:///csi/csi-provisioner.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      - name: csi-attacher
        image: {{ .Values.operator.env.ROOK_CSI_ATTACHER_IMAGE | default "registry.k8s.io/sig-storage/csi-attacher:v4.6.1" }}
        args:
        - "--v={{ .Values.operator.csi.logLevel | default 0 }}"
        - "--csi-address=$(ADDRESS)"
        - "--leader-election=true"
        - "--retry-interval-start=500ms"
        - "--default-fstype=ext4"
        env:
        - name: ADDRESS
          value: unix:///csi/csi-provisioner.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      {{- if .Values.operator.csi.enableSnapshotter }}
      - name: csi-snapshotter
        image: {{ .Values.operator.env.ROOK_CSI_SNAPSHOTTER_IMAGE | default "registry.k8s.io/sig-storage/csi-snapshotter:v8.0.1" }}
        args:
        - "--csi-address=$(ADDRESS)"
        - "--v={{ .Values.operator.csi.logLevel | default 0 }}"
        - "--timeout=150s"
        - "--leader-election=true"
        - "--extra-create-metadata=true"
        env:
        - name: ADDRESS
          value: unix:///csi/csi-provisioner.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      {{- end }}
      - name: csi-rbdplugin
        image: {{ .Values.operator.env.ROOK_CSI_CEPH_IMAGE | default "quay.io/cephcsi/cephcsi:v3.12.2" }}
        args:
        - "--nodeid=$(NODE_ID)"
        - "--type=rbd"
        - "--controllerserver=true"
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--instanceid=$(INSTANCE_ID)"
        - "--pidlimit=-1"
        - "--logtostderr=true"
        - "--v={{ .Values.operator.csi.logLevel | default 0 }}"
        - "--drivername=rook-ceph.rbd.csi.ceph.com"
        - "--setmetadata=true"
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CSI_ENDPOINT
          value: unix:///csi/csi-provisioner.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - mountPath: /dev
          name: host-dev
        - mountPath: /sys
          name: host-sys
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - name: ceph-config
          mountPath: /etc/ceph/
        - name: ceph-csi-config
          mountPath: /etc/csi-config/
        - name: ceph-csi-encryption-kms-config
          mountPath: /etc/csi-encryption-kms-config/
        - name: keys-tmp-dir
          mountPath: /tmp/csi/keys
      volumes:
      - name: socket-dir
        emptyDir:
          medium: Memory
      - name: host-dev
        hostPath:
          path: /dev
      - name: host-sys
        hostPath:
          path: /sys
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: ceph-config
        emptyDir: {}
      - name: ceph-csi-config
        configMap:
          name: rook-ceph-csi-config
      - name: ceph-csi-encryption-kms-config
        configMap:
          name: rook-ceph-csi-encryption-kms-config
      - name: keys-tmp-dir
        emptyDir:
          medium: Memory
      {{- if .Values.operator.csi.provisionerTolerations }}
      tolerations:
        {{- toYaml .Values.operator.csi.provisionerTolerations | nindent 6 }}
      {{- end }}
{{- end }}
